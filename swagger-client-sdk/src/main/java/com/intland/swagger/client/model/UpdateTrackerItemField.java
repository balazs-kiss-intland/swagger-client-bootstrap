/*
 * codeBeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.intland.swagger.client.model.AbstractFieldValue;
import com.intland.swagger.client.model.TableFieldValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * UpdateTrackerItemField
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-11-10T15:21:24.239+01:00[Europe/Budapest]")
public class UpdateTrackerItemField {
  public static final String SERIALIZED_NAME_FIELD_VALUES = "fieldValues";
  @SerializedName(SERIALIZED_NAME_FIELD_VALUES)
  private List<AbstractFieldValue> fieldValues = new ArrayList<AbstractFieldValue>();

  public static final String SERIALIZED_NAME_TABLE_VALUES = "tableValues";
  @SerializedName(SERIALIZED_NAME_TABLE_VALUES)
  private List<TableFieldValue> tableValues = new ArrayList<TableFieldValue>();

  public UpdateTrackerItemField fieldValues(List<AbstractFieldValue> fieldValues) {
    this.fieldValues = fieldValues;
    return this;
  }

  public UpdateTrackerItemField addFieldValuesItem(AbstractFieldValue fieldValuesItem) {
    if (this.fieldValues == null) {
      this.fieldValues = new ArrayList<AbstractFieldValue>();
    }
    this.fieldValues.add(fieldValuesItem);
    return this;
  }

   /**
   * Fields of a tracker item
   * @return fieldValues
  **/
  @ApiModelProperty(value = "Fields of a tracker item")
  public List<AbstractFieldValue> getFieldValues() {
    return fieldValues;
  }

  public void setFieldValues(List<AbstractFieldValue> fieldValues) {
    this.fieldValues = fieldValues;
  }

  public UpdateTrackerItemField tableValues(List<TableFieldValue> tableValues) {
    this.tableValues = tableValues;
    return this;
  }

  public UpdateTrackerItemField addTableValuesItem(TableFieldValue tableValuesItem) {
    if (this.tableValues == null) {
      this.tableValues = new ArrayList<TableFieldValue>();
    }
    this.tableValues.add(tableValuesItem);
    return this;
  }

   /**
   * Fields of a tracker item
   * @return tableValues
  **/
  @ApiModelProperty(value = "Fields of a tracker item")
  public List<TableFieldValue> getTableValues() {
    return tableValues;
  }

  public void setTableValues(List<TableFieldValue> tableValues) {
    this.tableValues = tableValues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateTrackerItemField updateTrackerItemField = (UpdateTrackerItemField) o;
    return Objects.equals(this.fieldValues, updateTrackerItemField.fieldValues) &&
        Objects.equals(this.tableValues, updateTrackerItemField.tableValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldValues, tableValues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateTrackerItemField {\n");
    sb.append("    fieldValues: ").append(toIndentedString(fieldValues)).append("\n");
    sb.append("    tableValues: ").append(toIndentedString(tableValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

