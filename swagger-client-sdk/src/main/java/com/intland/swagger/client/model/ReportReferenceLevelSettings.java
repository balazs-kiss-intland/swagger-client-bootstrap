/*
 * codeBeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.intland.swagger.client.model.ReportColumnSettings;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Reference level settings for Intelligent Table View.
 */
@ApiModel(description = "Reference level settings for Intelligent Table View.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-11-10T15:21:24.239+01:00[Europe/Budapest]")
public class ReportReferenceLevelSettings {
  public static final String SERIALIZED_NAME_REFERENCE_TRACKER_IDS = "referenceTrackerIds";
  @SerializedName(SERIALIZED_NAME_REFERENCE_TRACKER_IDS)
  private List<Integer> referenceTrackerIds = new ArrayList<Integer>();

  public static final String SERIALIZED_NAME_REFERENCE_TRACKER_TYPE_IDS = "referenceTrackerTypeIds";
  @SerializedName(SERIALIZED_NAME_REFERENCE_TRACKER_TYPE_IDS)
  private List<Integer> referenceTrackerTypeIds = new ArrayList<Integer>();

  public static final String SERIALIZED_NAME_COLUMNS = "columns";
  @SerializedName(SERIALIZED_NAME_COLUMNS)
  private List<ReportColumnSettings> columns = new ArrayList<ReportColumnSettings>();

  public static final String SERIALIZED_NAME_UPSTREAM_REFERENCE = "upstreamReference";
  @SerializedName(SERIALIZED_NAME_UPSTREAM_REFERENCE)
  private Boolean upstreamReference;

  public static final String SERIALIZED_NAME_DOWNSTREAM_REFERENCE = "downstreamReference";
  @SerializedName(SERIALIZED_NAME_DOWNSTREAM_REFERENCE)
  private Boolean downstreamReference;

  public static final String SERIALIZED_NAME_LEVEL = "level";
  @SerializedName(SERIALIZED_NAME_LEVEL)
  private Integer level;

  public ReportReferenceLevelSettings referenceTrackerIds(List<Integer> referenceTrackerIds) {
    this.referenceTrackerIds = referenceTrackerIds;
    return this;
  }

  public ReportReferenceLevelSettings addReferenceTrackerIdsItem(Integer referenceTrackerIdsItem) {
    if (this.referenceTrackerIds == null) {
      this.referenceTrackerIds = new ArrayList<Integer>();
    }
    this.referenceTrackerIds.add(referenceTrackerIdsItem);
    return this;
  }

   /**
   * Tracker ids to include on this level.
   * @return referenceTrackerIds
  **/
  @ApiModelProperty(value = "Tracker ids to include on this level.")
  public List<Integer> getReferenceTrackerIds() {
    return referenceTrackerIds;
  }

  public void setReferenceTrackerIds(List<Integer> referenceTrackerIds) {
    this.referenceTrackerIds = referenceTrackerIds;
  }

  public ReportReferenceLevelSettings referenceTrackerTypeIds(List<Integer> referenceTrackerTypeIds) {
    this.referenceTrackerTypeIds = referenceTrackerTypeIds;
    return this;
  }

  public ReportReferenceLevelSettings addReferenceTrackerTypeIdsItem(Integer referenceTrackerTypeIdsItem) {
    if (this.referenceTrackerTypeIds == null) {
      this.referenceTrackerTypeIds = new ArrayList<Integer>();
    }
    this.referenceTrackerTypeIds.add(referenceTrackerTypeIdsItem);
    return this;
  }

   /**
   * Tracker type ids to include on this level.
   * @return referenceTrackerTypeIds
  **/
  @ApiModelProperty(value = "Tracker type ids to include on this level.")
  public List<Integer> getReferenceTrackerTypeIds() {
    return referenceTrackerTypeIds;
  }

  public void setReferenceTrackerTypeIds(List<Integer> referenceTrackerTypeIds) {
    this.referenceTrackerTypeIds = referenceTrackerTypeIds;
  }

  public ReportReferenceLevelSettings columns(List<ReportColumnSettings> columns) {
    this.columns = columns;
    return this;
  }

  public ReportReferenceLevelSettings addColumnsItem(ReportColumnSettings columnsItem) {
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * Columns to show on this reference level.
   * @return columns
  **/
  @ApiModelProperty(required = true, value = "Columns to show on this reference level.")
  public List<ReportColumnSettings> getColumns() {
    return columns;
  }

  public void setColumns(List<ReportColumnSettings> columns) {
    this.columns = columns;
  }

  public ReportReferenceLevelSettings upstreamReference(Boolean upstreamReference) {
    this.upstreamReference = upstreamReference;
    return this;
  }

   /**
   * Include upstream references indicator.
   * @return upstreamReference
  **/
  @ApiModelProperty(example = "true", required = true, value = "Include upstream references indicator.")
  public Boolean getUpstreamReference() {
    return upstreamReference;
  }

  public void setUpstreamReference(Boolean upstreamReference) {
    this.upstreamReference = upstreamReference;
  }

  public ReportReferenceLevelSettings downstreamReference(Boolean downstreamReference) {
    this.downstreamReference = downstreamReference;
    return this;
  }

   /**
   * Include downstream references indicator.
   * @return downstreamReference
  **/
  @ApiModelProperty(example = "false", required = true, value = "Include downstream references indicator.")
  public Boolean getDownstreamReference() {
    return downstreamReference;
  }

  public void setDownstreamReference(Boolean downstreamReference) {
    this.downstreamReference = downstreamReference;
  }

  public ReportReferenceLevelSettings level(Integer level) {
    this.level = level;
    return this;
  }

   /**
   * Level of the reference layer
   * minimum: 1
   * @return level
  **/
  @ApiModelProperty(example = "1", required = true, value = "Level of the reference layer")
  public Integer getLevel() {
    return level;
  }

  public void setLevel(Integer level) {
    this.level = level;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportReferenceLevelSettings reportReferenceLevelSettings = (ReportReferenceLevelSettings) o;
    return Objects.equals(this.referenceTrackerIds, reportReferenceLevelSettings.referenceTrackerIds) &&
        Objects.equals(this.referenceTrackerTypeIds, reportReferenceLevelSettings.referenceTrackerTypeIds) &&
        Objects.equals(this.columns, reportReferenceLevelSettings.columns) &&
        Objects.equals(this.upstreamReference, reportReferenceLevelSettings.upstreamReference) &&
        Objects.equals(this.downstreamReference, reportReferenceLevelSettings.downstreamReference) &&
        Objects.equals(this.level, reportReferenceLevelSettings.level);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceTrackerIds, referenceTrackerTypeIds, columns, upstreamReference, downstreamReference, level);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportReferenceLevelSettings {\n");
    sb.append("    referenceTrackerIds: ").append(toIndentedString(referenceTrackerIds)).append("\n");
    sb.append("    referenceTrackerTypeIds: ").append(toIndentedString(referenceTrackerTypeIds)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    upstreamReference: ").append(toIndentedString(upstreamReference)).append("\n");
    sb.append("    downstreamReference: ").append(toIndentedString(downstreamReference)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

