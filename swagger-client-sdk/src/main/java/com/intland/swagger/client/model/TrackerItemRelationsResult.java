/*
 * codeBeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.intland.swagger.client.model.DownstreamTrackerItemReference;
import com.intland.swagger.client.model.IncomingTrackerItemAssociation;
import com.intland.swagger.client.model.OutgoingTrackerItemAssociation;
import com.intland.swagger.client.model.TrackerItemRevision;
import com.intland.swagger.client.model.UpstreamTrackerItemReference;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * References to a tracker item
 */
@ApiModel(description = "References to a tracker item")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-11-10T15:21:24.239+01:00[Europe/Budapest]")
public class TrackerItemRelationsResult {
  public static final String SERIALIZED_NAME_ITEM_ID = "itemId";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private TrackerItemRevision itemId = null;

  public static final String SERIALIZED_NAME_DOWNSTREAM_REFERENCES = "downstreamReferences";
  @SerializedName(SERIALIZED_NAME_DOWNSTREAM_REFERENCES)
  private List<DownstreamTrackerItemReference> downstreamReferences = new ArrayList<DownstreamTrackerItemReference>();

  public static final String SERIALIZED_NAME_UPSTREAM_REFERENCES = "upstreamReferences";
  @SerializedName(SERIALIZED_NAME_UPSTREAM_REFERENCES)
  private List<UpstreamTrackerItemReference> upstreamReferences = new ArrayList<UpstreamTrackerItemReference>();

  public static final String SERIALIZED_NAME_INCOMING_ASSOCIATIONS = "incomingAssociations";
  @SerializedName(SERIALIZED_NAME_INCOMING_ASSOCIATIONS)
  private List<IncomingTrackerItemAssociation> incomingAssociations = new ArrayList<IncomingTrackerItemAssociation>();

  public static final String SERIALIZED_NAME_OUTGOING_ASSOCIATIONS = "outgoingAssociations";
  @SerializedName(SERIALIZED_NAME_OUTGOING_ASSOCIATIONS)
  private List<OutgoingTrackerItemAssociation> outgoingAssociations = new ArrayList<OutgoingTrackerItemAssociation>();

  public TrackerItemRelationsResult itemId(TrackerItemRevision itemId) {
    this.itemId = itemId;
    return this;
  }

   /**
   * Get itemId
   * @return itemId
  **/
  @ApiModelProperty(value = "")
  public TrackerItemRevision getItemId() {
    return itemId;
  }

  public void setItemId(TrackerItemRevision itemId) {
    this.itemId = itemId;
  }

  public TrackerItemRelationsResult downstreamReferences(List<DownstreamTrackerItemReference> downstreamReferences) {
    this.downstreamReferences = downstreamReferences;
    return this;
  }

  public TrackerItemRelationsResult addDownstreamReferencesItem(DownstreamTrackerItemReference downstreamReferencesItem) {
    if (this.downstreamReferences == null) {
      this.downstreamReferences = new ArrayList<DownstreamTrackerItemReference>();
    }
    this.downstreamReferences.add(downstreamReferencesItem);
    return this;
  }

   /**
   * References and associations to the item
   * @return downstreamReferences
  **/
  @ApiModelProperty(value = "References and associations to the item")
  public List<DownstreamTrackerItemReference> getDownstreamReferences() {
    return downstreamReferences;
  }

  public void setDownstreamReferences(List<DownstreamTrackerItemReference> downstreamReferences) {
    this.downstreamReferences = downstreamReferences;
  }

  public TrackerItemRelationsResult upstreamReferences(List<UpstreamTrackerItemReference> upstreamReferences) {
    this.upstreamReferences = upstreamReferences;
    return this;
  }

  public TrackerItemRelationsResult addUpstreamReferencesItem(UpstreamTrackerItemReference upstreamReferencesItem) {
    if (this.upstreamReferences == null) {
      this.upstreamReferences = new ArrayList<UpstreamTrackerItemReference>();
    }
    this.upstreamReferences.add(upstreamReferencesItem);
    return this;
  }

   /**
   * References and associations to the item
   * @return upstreamReferences
  **/
  @ApiModelProperty(value = "References and associations to the item")
  public List<UpstreamTrackerItemReference> getUpstreamReferences() {
    return upstreamReferences;
  }

  public void setUpstreamReferences(List<UpstreamTrackerItemReference> upstreamReferences) {
    this.upstreamReferences = upstreamReferences;
  }

  public TrackerItemRelationsResult incomingAssociations(List<IncomingTrackerItemAssociation> incomingAssociations) {
    this.incomingAssociations = incomingAssociations;
    return this;
  }

  public TrackerItemRelationsResult addIncomingAssociationsItem(IncomingTrackerItemAssociation incomingAssociationsItem) {
    if (this.incomingAssociations == null) {
      this.incomingAssociations = new ArrayList<IncomingTrackerItemAssociation>();
    }
    this.incomingAssociations.add(incomingAssociationsItem);
    return this;
  }

   /**
   * References and associations to the item
   * @return incomingAssociations
  **/
  @ApiModelProperty(value = "References and associations to the item")
  public List<IncomingTrackerItemAssociation> getIncomingAssociations() {
    return incomingAssociations;
  }

  public void setIncomingAssociations(List<IncomingTrackerItemAssociation> incomingAssociations) {
    this.incomingAssociations = incomingAssociations;
  }

  public TrackerItemRelationsResult outgoingAssociations(List<OutgoingTrackerItemAssociation> outgoingAssociations) {
    this.outgoingAssociations = outgoingAssociations;
    return this;
  }

  public TrackerItemRelationsResult addOutgoingAssociationsItem(OutgoingTrackerItemAssociation outgoingAssociationsItem) {
    if (this.outgoingAssociations == null) {
      this.outgoingAssociations = new ArrayList<OutgoingTrackerItemAssociation>();
    }
    this.outgoingAssociations.add(outgoingAssociationsItem);
    return this;
  }

   /**
   * References and associations to the item
   * @return outgoingAssociations
  **/
  @ApiModelProperty(value = "References and associations to the item")
  public List<OutgoingTrackerItemAssociation> getOutgoingAssociations() {
    return outgoingAssociations;
  }

  public void setOutgoingAssociations(List<OutgoingTrackerItemAssociation> outgoingAssociations) {
    this.outgoingAssociations = outgoingAssociations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrackerItemRelationsResult trackerItemRelationsResult = (TrackerItemRelationsResult) o;
    return Objects.equals(this.itemId, trackerItemRelationsResult.itemId) &&
        Objects.equals(this.downstreamReferences, trackerItemRelationsResult.downstreamReferences) &&
        Objects.equals(this.upstreamReferences, trackerItemRelationsResult.upstreamReferences) &&
        Objects.equals(this.incomingAssociations, trackerItemRelationsResult.incomingAssociations) &&
        Objects.equals(this.outgoingAssociations, trackerItemRelationsResult.outgoingAssociations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemId, downstreamReferences, upstreamReferences, incomingAssociations, outgoingAssociations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrackerItemRelationsResult {\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    downstreamReferences: ").append(toIndentedString(downstreamReferences)).append("\n");
    sb.append("    upstreamReferences: ").append(toIndentedString(upstreamReferences)).append("\n");
    sb.append("    incomingAssociations: ").append(toIndentedString(incomingAssociations)).append("\n");
    sb.append("    outgoingAssociations: ").append(toIndentedString(outgoingAssociations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

