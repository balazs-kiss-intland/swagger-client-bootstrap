/*
 * codeBeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TrackerFilteringRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-11-10T15:21:24.239+01:00[Europe/Budapest]")
public class TrackerFilteringRequest {
  public static final String SERIALIZED_NAME_TYPE_IDS = "typeIds";
  @SerializedName(SERIALIZED_NAME_TYPE_IDS)
  private List<Integer> typeIds = new ArrayList<Integer>();

  public static final String SERIALIZED_NAME_HIDDEN = "hidden";
  @SerializedName(SERIALIZED_NAME_HIDDEN)
  private Boolean hidden;

  public static final String SERIALIZED_NAME_DELETED = "deleted";
  @SerializedName(SERIALIZED_NAME_DELETED)
  private Boolean deleted;

  public TrackerFilteringRequest typeIds(List<Integer> typeIds) {
    this.typeIds = typeIds;
    return this;
  }

  public TrackerFilteringRequest addTypeIdsItem(Integer typeIdsItem) {
    if (this.typeIds == null) {
      this.typeIds = new ArrayList<Integer>();
    }
    this.typeIds.add(typeIdsItem);
    return this;
  }

   /**
   * List of tracker type IDs, to only show trackers of these types.
   * @return typeIds
  **/
  @ApiModelProperty(example = "[]", value = "List of tracker type IDs, to only show trackers of these types.")
  public List<Integer> getTypeIds() {
    return typeIds;
  }

  public void setTypeIds(List<Integer> typeIds) {
    this.typeIds = typeIds;
  }

  public TrackerFilteringRequest hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * True to also show hidden trackers.
   * @return hidden
  **/
  @ApiModelProperty(example = "false", value = "True to also show hidden trackers.")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public TrackerFilteringRequest deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * True to also show removed trackers.
   * @return deleted
  **/
  @ApiModelProperty(example = "false", value = "True to also show removed trackers.")
  public Boolean getDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrackerFilteringRequest trackerFilteringRequest = (TrackerFilteringRequest) o;
    return Objects.equals(this.typeIds, trackerFilteringRequest.typeIds) &&
        Objects.equals(this.hidden, trackerFilteringRequest.hidden) &&
        Objects.equals(this.deleted, trackerFilteringRequest.deleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(typeIds, hidden, deleted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrackerFilteringRequest {\n");
    sb.append("    typeIds: ").append(toIndentedString(typeIds)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

