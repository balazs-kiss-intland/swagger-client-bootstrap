/*
 * codeBeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.intland.swagger.client.model.AbstractFieldValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Reference to an item
 */
@ApiModel(description = "Reference to an item")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-11-10T15:21:24.239+01:00[Europe/Budapest]")

public class TrackerItemChange {
  public static final String SERIALIZED_NAME_FIELD_ID = "fieldId";
  @SerializedName(SERIALIZED_NAME_FIELD_ID)
  private Integer fieldId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OLD_VALUE = "oldValue";
  @SerializedName(SERIALIZED_NAME_OLD_VALUE)
  private AbstractFieldValue oldValue = null;

  public static final String SERIALIZED_NAME_NEW_VALUE = "newValue";
  @SerializedName(SERIALIZED_NAME_NEW_VALUE)
  private AbstractFieldValue newValue = null;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public TrackerItemChange() {
    this.type = this.getClass().getSimpleName();
  }
  public TrackerItemChange fieldId(Integer fieldId) {
    this.fieldId = fieldId;
    return this;
  }

   /**
   * Id of the field
   * @return fieldId
  **/
  @ApiModelProperty(value = "Id of the field")
  public Integer getFieldId() {
    return fieldId;
  }

  public void setFieldId(Integer fieldId) {
    this.fieldId = fieldId;
  }

  public TrackerItemChange name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the field
   * @return name
  **/
  @ApiModelProperty(value = "Name of the field")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TrackerItemChange oldValue(AbstractFieldValue oldValue) {
    this.oldValue = oldValue;
    return this;
  }

   /**
   * Get oldValue
   * @return oldValue
  **/
  @ApiModelProperty(value = "")
  public AbstractFieldValue getOldValue() {
    return oldValue;
  }

  public void setOldValue(AbstractFieldValue oldValue) {
    this.oldValue = oldValue;
  }

  public TrackerItemChange newValue(AbstractFieldValue newValue) {
    this.newValue = newValue;
    return this;
  }

   /**
   * Get newValue
   * @return newValue
  **/
  @ApiModelProperty(value = "")
  public AbstractFieldValue getNewValue() {
    return newValue;
  }

  public void setNewValue(AbstractFieldValue newValue) {
    this.newValue = newValue;
  }

  public TrackerItemChange type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Change model type
   * @return type
  **/
  @ApiModelProperty(value = "Change model type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrackerItemChange trackerItemChange = (TrackerItemChange) o;
    return Objects.equals(this.fieldId, trackerItemChange.fieldId) &&
        Objects.equals(this.name, trackerItemChange.name) &&
        Objects.equals(this.oldValue, trackerItemChange.oldValue) &&
        Objects.equals(this.newValue, trackerItemChange.newValue) &&
        Objects.equals(this.type, trackerItemChange.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldId, name, oldValue, newValue, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrackerItemChange {\n");
    sb.append("    fieldId: ").append(toIndentedString(fieldId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    oldValue: ").append(toIndentedString(oldValue)).append("\n");
    sb.append("    newValue: ").append(toIndentedString(newValue)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

