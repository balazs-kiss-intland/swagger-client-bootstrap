/*
 * codeBeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.api;

import com.intland.swagger.client.ApiException;
import com.intland.swagger.client.model.DeployProject;
import com.intland.swagger.client.model.ExportProject;
import java.io.File;
import com.intland.swagger.client.model.Project;
import com.intland.swagger.client.model.Tracker;
import com.intland.swagger.client.model.TrackerFilteringRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectApi
 */
@Ignore
public class ProjectApiTest {

    private final ProjectApi api = new ProjectApi();

    
    /**
     * Deploy a project configuration to a Project
     *
     * The configuration file needs to be uploaded to codeBeamer Documents
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deployConfigurationTest() throws ApiException {
        DeployProject deployProject = null;
        Project response = api.deployConfiguration(deployProject);

        // TODO: test validations
    }
    
    /**
     * Exports the specified project to a zip file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportTest() throws ApiException {
        Integer projectId = null;
        ExportProject exportProject = null;
        File response = api.export(projectId, exportProject);

        // TODO: test validations
    }
    
    /**
     * Get the list of all trackers in a project
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllTrackersInProjectTest() throws ApiException {
        Integer projectId = null;
        TrackerFilteringRequest trackerFilteringRequest = null;
        List<Tracker> response = api.getAllTrackersInProject(projectId, trackerFilteringRequest);

        // TODO: test validations
    }
    
    /**
     * Get project
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProjectByIdTest() throws ApiException {
        Integer projectId = null;
        Project response = api.getProjectById(projectId);

        // TODO: test validations
    }
    
    /**
     * Get projects
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProjectsTest() throws ApiException {
        List<Project> response = api.getProjects();

        // TODO: test validations
    }
    
    /**
     * Get trackers
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTrackersTest() throws ApiException {
        Integer projectId = null;
        List<Tracker> response = api.getTrackers(projectId);

        // TODO: test validations
    }
    
}
